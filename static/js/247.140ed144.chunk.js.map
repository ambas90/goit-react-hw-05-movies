{"version":3,"file":"static/js/247.140ed144.chunk.js","mappings":"kNAGe,SAASA,IAAQ,IAADC,EACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAAaC,EAAAA,EAAAA,GAAS,SAADC,OAAUJ,EAAO,cAAtCE,SAER,OACEG,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACgB,QADhBP,EACGG,EAASK,YAAI,IAAAR,OAAA,EAAbA,EAAeS,KAAI,SAAAC,GAAK,OACvBC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEM,IAAG,mCAAAP,OAAqCK,EAAMG,cAC9CC,IAAI,MAENR,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,EAAMK,QACXJ,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,cAAYG,EAAMM,eANdN,EAAMO,GAOV,OAKf,C,gFCnBAC,EAAAA,EAAAA,SAAAA,QAAyB,gCAuBzB,IArBiB,SAAAC,GACf,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCjB,EAAQmB,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCJ,EAAAA,EAAAA,UAAS,EAAC,IAAOK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,EAAC,IAAOS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAApCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAetB,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAnBf,GAAa,GAAMa,EAAAE,KAAA,EACIzB,EAAAA,EAAAA,IAAU,GAADb,OAAIc,GAAKd,OAXhC,6CAW6C,KAAD,EAAAkC,EAAAE,EAAAG,KAA7CJ,EAAID,EAAJC,KACRhB,EAAYgB,GACZZ,GAAa,GAAO,wBAAAa,EAAAI,OAAA,GAAAP,EAAA,KACrB,kBALa,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAMdb,IAAWc,OAAM,SAAAjB,GACfC,GAAS,GACTJ,GAAa,EACf,GACF,GAAG,CAACT,IAEG,CAAEhB,SAAAA,EAAUwB,UAAAA,EAAWI,MAAAA,EAChC,C","sources":["components/Cast/Cast.jsx","hooks/useFilms.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport useFilms from 'hooks/useFilms';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const { filmData } = useFilms(`movie/${movieId}/credits?`);\n\n  return (\n    <div>\n      <ul>\n        {filmData.cast?.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n              alt=\"\"\n            />\n            <h3>{actor.name}</h3>\n            <p>character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst apiKey = 'api_key=29926744d88f87de2894846856dc31dc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst useFilms = query => {\n  const [filmData, setFilmList] = useState([]);\n  const [isLoading, setIsLoading] = useState([false]);\n  const [error, setError] = useState([false]);\n\n  useEffect(() => {\n    const getFilms = async () => {\n      setIsLoading(true);\n      const { data } = await axios.get(`${query}${apiKey}`);\n      setFilmList(data);\n      setIsLoading(false);\n    };\n    getFilms().catch(error => {\n      setError(true);\n      setIsLoading(false);\n    });\n  }, [query]);\n\n  return { filmData, isLoading, error };\n};\n\nexport default useFilms;\n"],"names":["Cast","_filmData$cast","movieId","useParams","filmData","useFilms","concat","_jsx","children","cast","map","actor","_jsxs","src","profile_path","alt","name","character","id","axios","query","_useState","useState","_useState2","_slicedToArray","setFilmList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","stop","apply","arguments","catch"],"sourceRoot":""}