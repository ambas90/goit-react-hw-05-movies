{"version":3,"file":"static/js/186.ea4d5f7d.chunk.js","mappings":"kNAGe,SAASA,IAAW,IAADC,EACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAAaC,EAAAA,EAAAA,GAAS,SAADC,OAAUJ,EAAO,cAAtCE,SAER,OACEG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGJ,EAASK,cAAgB,IAAKC,EAAAA,EAAAA,KAAA,KAAAF,SAAG,gBAClCE,EAAAA,EAAAA,KAAA,MAAAF,SACmB,QADnBP,EACGG,EAASO,eAAO,IAAAV,OAAA,EAAhBA,EAAkBW,KAAI,SAAAC,GAAM,OAC3BN,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAKK,EAAOC,UACZJ,EAAAA,EAAAA,KAAA,KAAAF,SAAIK,EAAOE,YAFJF,EAAOG,GAGX,QAKf,C,gFChBAC,EAAAA,EAAAA,SAAAA,QAAyB,gCAuBzB,IArBiB,SAAAC,GACf,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCf,EAAQiB,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCJ,EAAAA,EAAAA,UAAS,EAAC,IAAOK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,EAAC,IAAOS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAApCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAetB,OAbAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAnBf,GAAa,GAAMa,EAAAE,KAAA,EACIzB,EAAAA,EAAAA,IAAU,GAADX,OAAIY,GAAKZ,OAXhC,6CAW6C,KAAD,EAAAgC,EAAAE,EAAAG,KAA7CJ,EAAID,EAAJC,KACRhB,EAAYgB,GACZZ,GAAa,GAAO,wBAAAa,EAAAI,OAAA,GAAAP,EAAA,KACrB,kBALa,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAMdb,IAAWc,OAAM,SAAAjB,GACfC,GAAS,GACTJ,GAAa,EACf,GACF,GAAG,CAACT,IAEG,CAAEd,SAAAA,EAAUsB,UAAAA,EAAWI,MAAAA,EAChC,C","sources":["components/Reviews/Reviews.jsx","hooks/useFilms.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport useFilms from 'hooks/useFilms';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const { filmData } = useFilms(`movie/${movieId}/reviews?`);\n\n  return (\n    <div>\n      {filmData.total_results < 1 && <p>no reviews</p>}\n      <ul>\n        {filmData.results?.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst apiKey = 'api_key=29926744d88f87de2894846856dc31dc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst useFilms = query => {\n  const [filmData, setFilmList] = useState([]);\n  const [isLoading, setIsLoading] = useState([false]);\n  const [error, setError] = useState([false]);\n\n  useEffect(() => {\n    const getFilms = async () => {\n      setIsLoading(true);\n      const { data } = await axios.get(`${query}${apiKey}`);\n      setFilmList(data);\n      setIsLoading(false);\n    };\n    getFilms().catch(error => {\n      setError(true);\n      setIsLoading(false);\n    });\n  }, [query]);\n\n  return { filmData, isLoading, error };\n};\n\nexport default useFilms;\n"],"names":["Reviews","_filmData$results","movieId","useParams","filmData","useFilms","concat","_jsxs","children","total_results","_jsx","results","map","review","author","content","id","axios","query","_useState","useState","_useState2","_slicedToArray","setFilmList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","stop","apply","arguments","catch"],"sourceRoot":""}